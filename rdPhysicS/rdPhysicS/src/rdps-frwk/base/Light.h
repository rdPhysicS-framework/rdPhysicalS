#ifndef	__LIGHT_H__
#define	__LIGHT_H__

#include "..\..\GlobalDefs.h"

RDPS_BEGIN
	FRWK_BEGIN

		/********************************************************************************************************************************************
		 *
		 * Classe Base para a iluminação, nela contem um bool 
		 * shadow para identificar se havera calculo de sombra.
		 * Um type para definir o tipo de luz que será enviado
		 * para o dispositivo.
		 *
		 ********************************************************************************************************************************************/
		class Light
		{
		private:
			bool shadow;
			TypeLight type;

		public:
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Construtor
			 * recebe um parametro que determina o tipo da luz.
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			Light(const TypeLight _type);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Construtor
			 * recebe 2 parametros.
			 * -> primeiro define se havera calculo de sombra;
			 * -> segundo o tipo da luz;
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			Light(bool shadow,
				  TypeLight type);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Construtor de copia
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			Light(const Light &other);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Destrutor padrao
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			virtual ~Light() {}
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar que gera uma copia do objeto
			 * O filho desta classe deve reescrever esta funcao.
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			virtual Light *Clone() const = 0;
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao de sobrecarga de operador para copia.
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			Light &operator=(const Light &other);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar que retorna a informacao de sombra
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			bool GetShadow() const;
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar que retorna o tipo da luz.
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			TypeLight GetType() const;
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar que para setar se havera calculo de sombra
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			Light &SetShadow(const bool _shadow);
		};

	FRWK_END
RDPS_END

#endif//__LIGHT_H__