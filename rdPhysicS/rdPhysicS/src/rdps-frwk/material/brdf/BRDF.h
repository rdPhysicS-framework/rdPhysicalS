#ifndef	__BRDF_H__
#define	__BRDF_H__

#include "..\..\..\GlobalDefs.h"
#include <RTmath.h>

RDPS_BEGIN
	FRWK_BEGIN
		/********************************************************************************************************************************************
		 *
		 * Classe BRDF.
		 * Componente de efeito cor para material,
		 * nela contem :
		 * -> color 
		 * -> k (percentual para o calculo do efeito da cor)
		 * -> type (tipo do brdf Ambient, Diffuse, GlossySpecular, PerfectSpecular).
		 *
		 ********************************************************************************************************************************************/
		class BRDF
		{
		private:
			RT::Vec3f color;
			float k;
			TypeBRDF type;

		public:
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Construtor
			 * recebe 3 parametros:
			 * cor, percentual, tipo (padrao AMNIENT)
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			BRDF(const RT::Vec3f &_color = RT::Vec3f(),
				 const float _k = 0.0f,
				 const TypeBRDF _type = AMBIENT);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Construtor Padrao que define o tipo do BRDF
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			BRDF(const TypeBRDF _type);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Construtor de copia
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			BRDF(const BRDF &other);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Destrutor padrao
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			~BRDF();
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar que gera uma copia do objeto.
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			BRDF *Clone() const;
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao de sobrecarga de operador para copia.
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			BRDF &operator=(const BRDF &other);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar que retorna a cor
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			inline const RT::Vec3f &GetColor() const { return color; }
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar que retorna o percentual de efeito de cor
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			inline float GetK() const { return k; }
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar que retorna o o tipo do BRDF
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			inline TypeBRDF GetType() const { return type; }
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar para setar os dados da cor
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			BRDF &SetColor(const RT::Vec3f &_color);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar para setar o percentual de efeito de cor
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			BRDF &SetK(const float _k);
		};

	FRWK_END
RDPS_END
#endif//__BRDF_H__