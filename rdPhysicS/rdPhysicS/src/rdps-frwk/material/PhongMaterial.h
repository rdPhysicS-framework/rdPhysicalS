#ifndef	__PHONG_H__
#define	__PHONG_H__

#include "..\..\GlobalDefs.h"
#include "..\base\Material.h"

RDPS_BEGIN
	FRWK_BEGIN

		class GlossySpecular;

		/********************************************************************************************************************************************
		 *
		 * Classe do material Phong
		 * nela contem 3 componentes BRDF:
		 * ambient, diffuse, specular.
		 *
		 ********************************************************************************************************************************************/
		class PhongMaterial : public Material
		{
		private:
			BRDF *diffuse;
			GlossySpecular *specular;

		public:
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Construtor Padrao que define o tipo do material
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			PhongMaterial();
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Construtor
			 * recebe 3 parametros BRDF:
			 * ambient, diffuse, specular
			 * que podem serem criados com cores diferentes
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			PhongMaterial(BRDF *_ambient,
						  BRDF *_diffuse,
						  GlossySpecular *_specular);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Construtor
			 * recebe 4 parametros:
			 * -> uma cor
			 * -> o percentual da cor ambient;
			 * -> o percentual da cor diffuse;
			 * -> o percentual da cor specular;
			 * -> a intensidade do specular.
			 * Cria todos os componetes do material com uma cor para todos.
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			PhongMaterial(const RT::Vec3f &color,
						  const float ambient,
						  const float diffuse,
						  const float specular,
						  const float intensity);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Construtor de copia
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			PhongMaterial(const PhongMaterial &other);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Destrutor padrao
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			~PhongMaterial();
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar que gera uma copia do objeto.
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			virtual PhongMaterial *Clone() const;
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao de sobrecarga de operador para copia.
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			PhongMaterial &operator=(const PhongMaterial &other);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar que retorna o Componente BRDF (diffuse).
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			inline BRDF *GetDiffuse() const			   { return diffuse;  }
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar que retorna o Componente BRDF (specular).
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			inline GlossySpecular *GetSpecular() const { return specular; }
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar para setar os dados do Componente BRDF (diffuse).
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			PhongMaterial &SetDiffuse(BRDF *_diffuse);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar para setar os dados do Componente BRDF (specular).
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			PhongMaterial &SetSpecular(GlossySpecular *_specular);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar para setar a cor de todos os Componentes BRDF
			 * recebendo como parametro um vector3 (valores de 0 a 1).
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			virtual PhongMaterial &SetColor(const RT::Vec3f &color);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar para setar a cor de todos os Componentes BRDF
			 * recebendo como parametro 3 floats (r, g, b - valores de a a 1).
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			virtual PhongMaterial &SetColor(const float r, const float g, const float b);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar para setar o multiplicador de potencia para o Componenete BRDF (diffuse).
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			PhongMaterial &SetDiffuseK(const float _diffuse);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar para setar o multiplicador de potencia para o Componenete BRDF (specular).
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			PhongMaterial &SetSpecularK(const float _specular);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar para setar o multiplicador de intensidade para o Componenete BRDF (specular).
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			PhongMaterial &SetIntensity(const float intensity);
		};

	FRWK_END
RDPS_END

#endif//__PHONG_H__