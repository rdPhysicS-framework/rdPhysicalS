#ifndef	__SIMPLE_MATERIAL_H__
#define	__SIMPLE_MATERIAL_H__

#include "..\base\Material.h"

RDPS_BEGIN
	FRWK_BEGIN

		/********************************************************************************************************************************************
		 *
		 * Classe de material Simples
		 * nela contem 2 componentes BRDF:
		 * ambient, diffuse.
		 *
		 ********************************************************************************************************************************************/
		class SimpleMaterial : public Material
		{
		private:
			BRDF *diffuse;

		public:
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Construtor Padrao que define o tipo do material
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			SimpleMaterial();
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Construtor
			 * recebe 2 parametros BRDF:
			 * ambient, diffuse
			 * que podem serem criados com cores diferentes
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			SimpleMaterial(BRDF *_ambient,
						   BRDF *_diffuse);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Construtor
			 * recebe 3 parametros:
			 * -> uma cor
			 * -> o percentual da cor ambient;
			 * -> o percentual da cor diffuse;
			 * Cria todos os componetes do material com uma cor para todos.
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			SimpleMaterial(const RT::Vec3f &color,
						   const float ambient,
						   const float diffuse);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Construtor de copia
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			SimpleMaterial(const SimpleMaterial &other);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Destrutor padrao
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			~SimpleMaterial();
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar que gera uma copia do objeto.
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			virtual SimpleMaterial *Clone() const;
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao de sobrecarga de operador para copia.
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			SimpleMaterial &operator=(const SimpleMaterial &other);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar que retorna o Componente BRDF (diffuse).
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			inline BRDF *GetDiffuse() const { return diffuse; }
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar para setar os dados do Componente BRDF (diffuse).
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			SimpleMaterial &SetDiffuse(BRDF *_diffuse);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar para setar a cor de todos os Componentes BRDF
			 * recebendo como parametro um vector3 (valores de 0 a 1).
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			virtual SimpleMaterial &SetColor(const RT::Vec3f &color);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar para setar a cor de todos os Componentes BRDF
			 * recebendo como parametro 3 floats (r, g, b - valores de a a 1).
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			virtual SimpleMaterial &SetColor(const float r, const float g, const float b);
			/*---------------------------------------------------------------------------------------------------------------------------------------
			 * Funcao auxiliar para setar o multiplicador de potencia para o Componenete BRDF (diffuse).
			 *---------------------------------------------------------------------------------------------------------------------------------------*/
			SimpleMaterial &SetDiffuseK(const float _diffuse);
		};

	RDPS_END
FRWK_END

#endif//__SIMPLE_MATERIAL_H__